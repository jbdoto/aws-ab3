---
AWSTemplateFormatVersion: '2010-09-09'
Description: IntSiteCallerAlerts
Transform: AWS::Serverless-2016-10-31

Parameters:
  intSiteCallerJobName:
    Type: String
    Default: intsitecaller
  LambdaFunctionName:
    Type: String
    Default: ses-email-handler
  ContainerName:
    Type: String
    Default: ses-email-handler
  ContainerTag:
    Type: String
    Default: 1.0.0

Resources:

  SESLambdaExecutionRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - !Sub lambda.${AWS::Region}.amazonaws.com
            Action:
              - sts:AssumeRole
      Policies:
        - PolicyName: SESLambdaPolicy
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              - Effect: Allow
                Action:
                  - logs:CreateLogGroup
                Resource:
                  - !Sub arn:aws:logs:${AWS::Region}:${AWS::AccountId}:*
              - Effect: Allow
                Action:
                  - logs:CreateLogStream
                  - logs:PutLogEvents
                Resource:
                  - !Sub arn:aws:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/${LambdaFunctionName}:*
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/AmazonSESFullAccess


  SESEmailHandler:
    Type: AWS::Serverless::Function
    Properties:
      ImageUri: !Sub ${AWS::AccountId}.dkr.ecr.${AWS::Region}.amazonaws.com/${ContainerName}:${ContainerTag}
      Description: Sends an email on an event trigger.
      MemorySize: 128
      Timeout: 30
      PackageType: Image
      Role: !GetAtt SESLambdaExecutionRole.Arn
      FunctionName: !Sub ${LambdaFunctionName}
      Environment:
        Variables:
          FROM_ADDRESS: "Jeffrey Doto <jeffdoto@amazon.com>" # note SES must be configured with this allowed email.
          TO_ADDRESS: "jeffdoto@amazon.com"

      Events:
        BatchEventParentSucceededRule:
          Type: EventBridgeRule
          Properties:
            Pattern:
              source:
                - aws.batch
              detail-type:
                - Batch Job State Change
              detail:
                status:
                  - SUCCEEDED
                jobName:
                  - !Sub ${intSiteCallerJobName}
        BatchEventFailedRule:
          Type: EventBridgeRule
          Properties:
            Pattern:
              source:
                - aws.batch
              detail-type:
                - Batch Job State Change
              detail:
                status:
                  - FAILED
